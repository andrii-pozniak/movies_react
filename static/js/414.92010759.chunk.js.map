{"version":3,"file":"static/js/414.92010759.chunk.js","mappings":"0RAIaA,EAAcC,EAAAA,GAAAA,MAAJ,sHAEZ,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACK,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACA,SAAAF,GAAC,OAAIA,EAAEC,MAAME,MAAMC,MAAlB,IACL,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,UAAUC,CAAtB,IAIFC,EAAO,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAClB,GAAqCC,EAAAA,EAAAA,UAAS,IAA9C,eAAOC,EAAP,KAAmBC,EAAnB,KAqBA,OAAO,UAAC,KAAD,CAAWH,SAbM,SAAAI,GAEpBA,EAAMC,iBAEmB,KAAtBH,EAAWI,QAIdC,QAAQC,IAAIN,GACZC,EAAe,IACfH,EAASE,IALLO,MAAM,oBAOb,EACM,WACP,SAACnB,EAAD,CAAYoB,KAAK,OAAOC,YAAY,gBAAkBC,MAAOV,EAC7DW,SApB+B,SAAAC,GAE3BX,EAAcW,EAAIC,cAAcH,MAAMI,cAEtC,KAiBJ,SAAC,KAAD,CAAaN,KAAK,SAAlB,sBAES,E,8BCjCPO,EAAW,qFAoDjB,EAlDgB,WAAO,IAAD,EACpB,GAA4BhB,EAAAA,EAAAA,UAAS,IAArC,eAAOiB,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GA2B/C,OArBAC,EAAAA,EAAAA,YAAU,WAAM,wCAMd,+GAG2BC,EAAAA,GAAAA,IAAA,UAAaX,EAAb,wCAAqDQ,IAHhF,gBAGYI,EAHZ,EAGYA,KACRV,EAAUU,EAAKC,SAJnB,gDAOIvB,QAAQC,IAAR,MAPJ,0DANc,sBACW,KAArBiB,EAAUnB,QADA,mCAiBdyB,EAED,GAAE,CAACN,KAEG,4BACL,SAAC1B,EAAD,CAAMC,SA1BiB,SAACyB,GAExBD,EAA8B,KAAdC,EAAmB,CAAEO,MAAOP,GAAc,CAAC,EAC5D,IAwBEP,IAAU,gCAAM,UAAC,EAAAe,GAAD,WACdf,EAAOgB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACV,SAAC,EAAAC,GAAD,WACE,UAAC,KAAD,CAAMC,GAAE,UAAKJ,GAAMK,MAAO,CAAEC,KAAMrB,GAAlC,UACGiB,GAAc,gBAAKK,IAAG,0CAAqCL,GAAeM,MAAM,MAAMC,OAAO,MAAMC,IAAKT,KACzG,gBAAKM,IAAG,qFAAwFC,MAAM,MAAMC,OAAO,MAAMC,IAAKT,KAE9H,SAAC,IAAD,WAAM,uBAAIA,MAJZ,QADOD,EADC,IADG,WAWjB,SAAC,EAAAW,SAAD,WACC,SAAC,KAAD,QAIJ,C","sources":["components/Form/Form.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport styled from 'styled-components';\nimport { StyleButton, StyleForm } from \"components/Form/Form.Style\";\n\nexport const StyleInput  = styled.input`\ndisplay: flex;\npadding: ${p => p.theme.space[3]}px;\nmargin-bottom: ${p => p.theme.space[3]}px;\nborder-radius: ${ p => p.theme.radii.normal};\nfont-size: ${ p => p.theme.fontSizes.m};\n`;\n\n\nexport const Form = ({onSubmit}) => {\n    const [moviesName, setMoviesName ] = useState('');\n    \n\n    const handleMoviesNameChange = evt => {\n     \n        setMoviesName(evt.currentTarget.value.toLowerCase())\n        // console.log(evt.currentTarget.value.toLowerCase())\n       }\n       const handleSubmit = event => {\n      \n        event.preventDefault();\n        \n        if(moviesName.trim() === '') {\n            alert('do not name image')\n            return;\n        }\n        console.log(moviesName)\n        setMoviesName( '')       \n        onSubmit(moviesName)\n        // console.log('onSubmit', moviesName)\n    }\n    return <StyleForm onSubmit={handleSubmit}>\n    <StyleInput type=\"text\" placeholder=\"Search movies\"   value={moviesName}\n    onChange={handleMoviesNameChange}/>\n    <StyleButton type=\"submit\" >Search</StyleButton>\n   \n</StyleForm>}","import axios from \"axios\";\nimport PropTypes from 'prop-types';\n\nimport { useState, useEffect, Suspense } from \"react\";\nimport { Form } from \"components/Form/Form\";\nimport { Link, Outlet, useLocation, useSearchParams } from \"react-router-dom\";\nimport { Ul, Li, Page } from \"../Home/Home.Style\";\nconst NAME_URL = 'https://api.themoviedb.org/3/search/movie?api_key=c45f6d5d61e66845ac8342820cc294e1'\n\n const Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation()\n  const [searchParams, setSearchParams] = useSearchParams()\n  const nameMovie = searchParams.get('query') ?? '';\n\n  const handleFormSubmit = (nameMovie) => {\n\n    setSearchParams(nameMovie !== '' ? { query: nameMovie } : {})\n  }\n  useEffect(() => {\n    if (nameMovie.trim() === '') {\n\n      return;\n    }\n\n    async function fetchMoviesName() {\n\n      try {\n        const { data } = await axios.get(`${NAME_URL}&language=en-US&page=1&query=${nameMovie}`)\n        setMovies(data.results)\n\n      } catch (error) {\n        console.log(error)\n      }\n\n    }\n    fetchMoviesName()\n\n  }, [nameMovie])\n\n  return <div>\n    <Form onSubmit={handleFormSubmit} />\n    {movies && <div> <Ul>\n      {movies.map(({ id, title, poster_path }) =>\n        <Li key={id}>\n          <Link to={`${id}`} state={{ from: location }}>\n            {poster_path ? <img src={`https://image.tmdb.org/t/p/w500/${poster_path}`} width='200' height='300' alt={title} /> :\n            <img src={`https://thefittingsource.com/wp-content/uploads/2017/12/temp-inventory-landing.jpg`} width='200' height='250' alt={title} />}\n\n            <Page><b>{title}</b></Page> </Link>\n        </Li>\n      )} </Ul>\n    </div>}\n    <Suspense>\n     <Outlet />\n    </Suspense>\n    \n  </div>\n}\nexport default Movies;\n\nMovies.propTypes = {\n  data: PropTypes.array,\n  results: PropTypes.arrayOf(PropTypes.object),\n  \n  }"],"names":["StyleInput","styled","p","theme","space","radii","normal","fontSizes","m","Form","onSubmit","useState","moviesName","setMoviesName","event","preventDefault","trim","console","log","alert","type","placeholder","value","onChange","evt","currentTarget","toLowerCase","NAME_URL","movies","setMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","nameMovie","get","useEffect","axios","data","results","fetchMoviesName","query","Ul","map","id","title","poster_path","Li","to","state","from","src","width","height","alt","Suspense"],"sourceRoot":""}