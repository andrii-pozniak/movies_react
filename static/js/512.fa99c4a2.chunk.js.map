{"version":3,"file":"static/js/512.fa99c4a2.chunk.js","mappings":"+QAEaA,EAAOC,EAAAA,GAAAA,EAAH,+PACP,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACG,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACA,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACJ,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAKE,SAAAF,GAAC,OAAIA,EAAEC,MAAME,YAAYC,MAAxB,IACH,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,UAAUC,CAAtB,IACC,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,YAAYC,IAAxB,IAEHC,EAAKV,EAAAA,GAAAA,GAAH,+UAOC,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACC,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACE,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACP,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAIAQ,EAAKX,EAAAA,GAAAA,GAAH,uIAMDY,EAASZ,EAAAA,GAAAA,EAAH,2VAMT,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAKI,SAAAF,GAAC,OAAIA,EAAEC,MAAME,YAAYC,MAAxB,IACH,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,UAAUC,CAAtB,IACC,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,YAAYC,IAAxB,I,SC1CdI,EAAO,qCACPC,EAAM,4CAwCZ,EAtCc,WACV,IAAOC,GAAYC,EAAAA,EAAAA,MAAZD,SACP,GAAyBE,EAAAA,EAAAA,UAAS,IAAlC,eAAOC,EAAP,KAAcC,EAAd,KAiBE,IAhBFC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,+GAI6BC,EAAAA,GAAAA,IAAA,UAAaR,EAAb,YAAqBE,EAArB,mBAAwCD,EAAxC,oBAJ7B,gBAIeQ,EAJf,EAIeA,KACPH,EAAQG,GALhB,gDAQQC,QAAQC,IAAR,MARR,0DADY,uBAAC,WAAD,wBAYZC,EAED,GAAE,CAACV,IAEDG,EAAMQ,OAAS,CAAC,EAKxB,OAAO,4BACJ,SAAChB,EAAD,UAEIQ,EAAMS,MAAQT,EAAMS,KAAKC,KAAI,gBAAEF,EAAF,EAAEA,KAAMG,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,GAAtB,OAA8B,UAACnB,EAAD,WAC9DkB,GAAa,gBAAKE,IAAG,0CAAqCF,GAAgBG,MAAM,MAAMC,IAAI,MAAK,SAACrB,EAAD,wBAC5F,SAACb,EAAD,UAAO2B,MAF6DI,EAAvC,OAOjC,SAAC,KAAD,MAGH,C","sources":["components/Cast/Cast.Style.js","components/Cast/Cast.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Page = styled.p`\nmargin: ${p => p.theme.space[1]}px;\nmargin-top: ${p => p.theme.space[2]}px;\n    padding: ${p => p.theme.space[1]}px;\n padding: ${p => p.theme.space[2]}px;\n margin-right: auto;\n    margin-left: auto;\n    font-family: 'Roboto';\nfont-style: normal;\nfont-weight: ${p => p.theme.fontWeights.normal};\nfont-size: ${p => p.theme.fontSizes.m}px;\nline-height: ${p => p.theme.lineHeights.body};\n    `\nexport const Ul = styled.ul`\n    display: grid;\n    position: relative;\n    top: 0;\n    left: 0;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fit, 123px);\n    grid-gap: ${p => p.theme.space[3]}px;\n    margin-top: ${p => p.theme.space[1]}px;\n    margin-bottom: ${p => p.theme.space[1]}px;\n    padding: ${p => p.theme.space[1]}px;\n    list-style: none;    \n   align-items: stretch;\n   `\n   export const Li = styled.li`\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   justify-content: space-between;\n   `\n    export const Avatar = styled.p`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 120px;\n    height: 180px;\n    margin: ${p => p.theme.space[1]}px;\n    text-decoration: dashed;\n    background-color: #F5F4FA;\n    font-family: 'Roboto';\n    font-style: normal;\n    font-weight: ${p => p.theme.fontWeights.normal};\n    font-size: ${p => p.theme.fontSizes.m}px;\n    line-height: ${p => p.theme.lineHeights.body};\n    `","import axios from \"axios\";\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {  Outlet } from \"react-router-dom\";\nimport { Page, Ul, Li, Avatar } from \"components/Cast/Cast.Style\";\nconst CAST = 'https://api.themoviedb.org/3/movie'\nconst KEY = '?api_key=c45f6d5d61e66845ac8342820cc294e1'\n\n const Cast = () => {\n    const {moviesId} = useParams()\n    const [casts, setCast] = useState([])\n    useEffect(() => {   \n        async function fetchCastInfo () {\n        \n            // console.log('moviesId', moviesId)\n            try{\n                const {data} = await axios.get(`${CAST}/${moviesId}/credits${KEY}&language=en-US`)\n                setCast(data)\n               \n            }catch(error) {\n                console.log(error)\n            }\n        }\n        fetchCastInfo ()\n        \n      }, [moviesId])\n\n      if(casts.name === {}){\n        return\n      }\n    \n// console.log({casts})\n return <div>\n    <Ul>\n   \n       {casts.cast && casts.cast.map(({name, profile_path, id}) => <Li key={id}>\n    {profile_path?<img src={`https://image.tmdb.org/t/p/w500/${profile_path}`} width='120' alt=''/>:<Avatar>no photo</Avatar> }\n        <Page>{name}</Page>\n        \n    </Li>)}\n </Ul>\n   \n    <Outlet/>\n </div>\n\n}\nexport default Cast;\n\nCast.propTypes = {   \n    casts: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        profile_path: PropTypes.string.isRequired, \n        id: PropTypes.number.isRequired, \n      \n    }),\n  };"],"names":["Page","styled","p","theme","space","fontWeights","normal","fontSizes","m","lineHeights","body","Ul","Li","Avatar","CAST","KEY","moviesId","useParams","useState","casts","setCast","useEffect","axios","data","console","log","fetchCastInfo","name","cast","map","profile_path","id","src","width","alt"],"sourceRoot":""}