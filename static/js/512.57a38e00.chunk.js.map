{"version":3,"file":"static/js/512.57a38e00.chunk.js","mappings":"iQAEaA,EAAOC,EAAAA,GAAAA,EAAH,mQACL,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACG,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACJ,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACD,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAKG,SAAAF,GAAC,OAAIA,EAAEC,MAAME,YAAYC,MAAxB,IACH,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,UAAUC,CAAtB,IACC,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,YAAYC,IAAxB,IAELC,EAAKV,EAAAA,GAAAA,GAAH,iTAOD,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACC,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACE,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACP,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAIDQ,EAAKX,EAAAA,GAAAA,GAAH,gIAMFY,EAASZ,EAAAA,GAAAA,EAAH,6TAMP,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAKI,SAAAF,GAAC,OAAIA,EAAEC,MAAME,YAAYC,MAAxB,IACH,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,UAAUC,CAAtB,IACC,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,YAAYC,IAAxB,I,SC1CZI,EAAO,qCACPC,EAAM,4CA+CZ,EA7Ca,WACX,IAAQC,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAAyBE,EAAAA,EAAAA,UAAS,IAAlC,eAAOC,EAAP,KAAcC,EAAd,KAeA,IAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,+GAE2BC,EAAAA,GAAAA,IAAA,UAClBR,EADkB,YACVE,EADU,mBACSD,EADT,oBAF3B,gBAEYQ,EAFZ,EAEYA,KAGRH,EAAQG,GALZ,gDAOIC,QAAQC,IAAR,MAPJ,0DADc,uBAAC,WAAD,wBAWdC,EACD,GAAE,CAACV,IAEAG,EAAMQ,OAAS,CAAC,EAIpB,OACE,4BACE,SAAChB,EAAD,UACGQ,EAAMS,MACLT,EAAMS,KAAKC,KAAI,gBAAGF,EAAH,EAAGA,KAAMG,EAAT,EAASA,aAAcC,EAAvB,EAAuBA,GAAvB,OACb,UAACnB,EAAD,WACGkB,GACC,gBACEE,IAAG,0CAAqCF,GACxCG,MAAM,MACNC,IAAI,MAGN,SAACrB,EAAD,wBAEF,SAACb,EAAD,UAAO2B,MAVAI,EADI,OAgBnB,SAAC,KAAD,MAGL,C","sources":["components/Cast/Cast.Style.js","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Page = styled.p`\n  margin: ${p => p.theme.space[1]}px;\n  margin-top: ${p => p.theme.space[2]}px;\n  padding: ${p => p.theme.space[1]}px;\n  padding: ${p => p.theme.space[2]}px;\n  margin-right: auto;\n  margin-left: auto;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: ${p => p.theme.fontSizes.m}px;\n  line-height: ${p => p.theme.lineHeights.body};\n`;\nexport const Ul = styled.ul`\n  display: grid;\n  position: relative;\n  top: 0;\n  left: 0;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fit, 123px);\n  grid-gap: ${p => p.theme.space[3]}px;\n  margin-top: ${p => p.theme.space[1]}px;\n  margin-bottom: ${p => p.theme.space[1]}px;\n  padding: ${p => p.theme.space[1]}px;\n  list-style: none;\n  align-items: stretch;\n`;\nexport const Li = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n`;\nexport const Avatar = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 120px;\n  height: 180px;\n  margin: ${p => p.theme.space[1]}px;\n  text-decoration: dashed;\n  background-color: #f5f4fa;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: ${p => p.theme.fontSizes.m}px;\n  line-height: ${p => p.theme.lineHeights.body};\n`;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Outlet } from 'react-router-dom';\nimport { Page, Ul, Li, Avatar } from 'components/Cast/Cast.Style';\nconst CAST = 'https://api.themoviedb.org/3/movie';\nconst KEY = '?api_key=c45f6d5d61e66845ac8342820cc294e1';\n\nconst Cast = () => {\n  const { moviesId } = useParams();\n  const [casts, setCast] = useState([]);\n  useEffect(() => {\n    async function fetchCastInfo() {\n      try {\n        const { data } = await axios.get(\n          `${CAST}/${moviesId}/credits${KEY}&language=en-US`\n        );\n        setCast(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchCastInfo();\n  }, [moviesId]);\n\n  if (casts.name === {}) {\n    return;\n  }\n\n  return (\n    <div>\n      <Ul>\n        {casts.cast &&\n          casts.cast.map(({ name, profile_path, id }) => (\n            <Li key={id}>\n              {profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n                  width=\"120\"\n                  alt=\"\"\n                />\n              ) : (\n                <Avatar>no photo</Avatar>\n              )}\n              <Page>{name}</Page>\n            </Li>\n          ))}\n      </Ul>\n\n      <Outlet />\n    </div>\n  );\n};\nexport default Cast;\n\nCast.propTypes = {\n  casts: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    profile_path: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  }),\n};\n"],"names":["Page","styled","p","theme","space","fontWeights","normal","fontSizes","m","lineHeights","body","Ul","Li","Avatar","CAST","KEY","moviesId","useParams","useState","casts","setCast","useEffect","axios","data","console","log","fetchCastInfo","name","cast","map","profile_path","id","src","width","alt"],"sourceRoot":""}